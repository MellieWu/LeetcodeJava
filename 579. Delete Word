    public int minDistance(String word1, String word2) {
        int common = getLongCommonString(word1, word2);
        return (word1.length() + word2.length() - common*2);
    }

    public int getLongCommonString(String word1, String word2){
        int m = word1.length();
        int n = word2.length();

        int max = 0; //Assume longest substring is 0

        int[][] dp = new int[m][n];

        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(word1.charAt(i) == word2.charAt(j)){
                    if(i==0 || j==0){
                        dp[i][j]=1;
                    }
                    else{
                        int submax = 0;
                        for(int k = i-1; k >=0; k --){
                            for(int h = j-1; h>=0; h--){
                                if(dp[k][h] > submax){
                                    submax = dp[k][h];
                                }
                            }
                        }
                        System.out.println(submax);
                        dp[i][j] = submax + 1;
                    }
                    if(max < dp[i][j])
                        max = dp[i][j];
                }

            }
        }
        return max;
    }
